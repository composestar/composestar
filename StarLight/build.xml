<?xml version="1.0" encoding="UTF-8"?>
<project name="ComposeStar/StarLight" default="build" xmlns:dn="antlib:org.apache.ant.dotnet" xmlns:cs="antlib:Composestar">

	<condition property="imply.core" value="true">
		<!-- if set Compose*/Core parts will also be executed -->
		<not>
			<available file="${ant.file.ComposeStarCommon}" />
		</not>
	</condition>

	<property name="build.core" location="${basedir}/../Core" />
	<import file="${build.core}/common.xml" />

	<description>The StarLight (.NET 2+) implementation of Compose*</description>

	<target name="init_local" depends="init">
		<property name="out.qa.starlight" value="QualityAssurance" />
		<property name="out.fxcop.starlight" value="QualityAssurance" />
		<property name="out.nunit" value="Source${file.separator}Tests${file.separator}TestResults" />

		<property name="MSBuildTasks.dir" location="Source/VSIntegration/MSBuildTasks" />
		<property name="path.nunitprojects" value="Source${file.separator}Tests${file.separator}UnitTests${file.separator}" />
		<property name="path.ntimeprojects" value="Source${file.separator}Tests${file.separator}PerformanceTests${file.separator}" />

		<!-- FxCop -->
		<available file="FxCopCmd.exe" filepath="${build.starlight}${file.separator}Development${file.separator}fxcop${file.separator}" property="available.fxcop" />
		<available file="FxCopCmd.exe" filepath="${env.PATH}" property="available.fxcop.path" />
		<condition property="bin.fxcop" value="${build.starlight}${file.separator}Development${file.separator}fxcop${file.separator}FxCopCmd.exe" else="FxCopCmd.exe">
			<not>
				<isset property="available.fxcop.path" />
			</not>
		</condition>

		<!-- HTML Help Compiler -->
		<available file="hhc.exe" filepath="C:${file.separator}Program Files${file.separator}HTML Help Workshop${file.separator}" property="available.hhc" />

		<!-- Sandcastle -->
		<property name="bin.sandcastle" value="${build.starlight}${file.separator}Development${file.separator}Sandcastle${file.separator}Help File Builder${file.separator}SandcastleBuilderConsole.exe" />

		<!-- NUnit -->
		<property name="path.nunit" value="${build.starlight}${file.separator}Development${file.separator}NUnit${file.separator}" />

		<!-- NTime -->
		<property name="path.ntime" value="${build.starlight}${file.separator}Development${file.separator}NTime${file.separator}" />

		<!-- FxCop macro -->
		<macrodef name="fxcop">

			<attribute name="files" />
			<attribute name="reportfile" />

			<sequential>
				<exec executable="${bin.fxcop}" failonerror="false">
					<arg value="/f:@{files}" />
					<arg value="/o:@{reportfile}" />
					<arg value="/q" />
					<arg value="/summary" />
					<arg value="/axsl" />
					<arg value="/outxsl:${build.starlight}${file.separator}Development${file.separator}fxcop${file.separator}xml${file.separator}FxCopReport.xsl" />
				</exec>
			</sequential>

		</macrodef>
	</target>

	<!-- clean -->

	<target name="clean" depends="init_local" description="Cleanup the result of compilations">

		<ant target="clean" dir="Source/VSIntegration/" inheritRefs="true" />

		<!-- run clean on all msbuild project files -->
		<cs:dn_msbatch target="clean">
			<fileset dir="Source">
				<include name="**/*.csproj" />
			</fileset>
		</cs:dn_msbatch>

		<!-- clean java code -->
		<ant target="clean" dir="Source/Compiletime" inheritRefs="true" />

		<!-- clean qa -->
		<delete dir="${out.qa.starlight}" />
		<delete dir="${out.fxcop.starlight}" />
		<delete dir="${out.nunit}" />

		<!-- clean documentation -->
		<delete file="Documentation\ARM.pdf" />
		<delete file="Documentation\ComposeStar-StarLight.chm" />
		<delete file="Documentation\LastBuild.log" />

		<!-- clean installer -->
		<ant target="clean" dir="Setup" inheritRefs="true" />

	</target>

	<!-- build -->

	<target name="msbuild_init" depends="init_local" description="Perform soms system initializing through msbuild">
		<dn:msbuild>
			<target name="init" />
			<property name="StarlightVersion" value="${version.starlight}" />
			<property name="basedir" value="${basedir}" />
			<build>
				<Project DefaultTargets="empty" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
					<PropertyGroup>
						<MSBuildCommunityTasksPath Condition="'$(MSBuildCommunityTasksPath)' == ''">$(basedir)\Development\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
					</PropertyGroup>
					<Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />
					<Target Name="init">
						<Error Text="The StarlightVersion property is not set." Condition="$(StarlightVersion) == ''" />
						<RegistryRead KeyName="HKEY_LOCAL_MACHINE\Software\Composestar\StarLight" ValueName="CurrentVersion">
							<Output TaskParameter="Value" PropertyName="CurrentStarlightVersion" />
						</RegistryRead>

						<!-- get old values -->
						<RegistryRead KeyName="HKEY_LOCAL_MACHINE\Software\Composestar\Starlight\$(CurrentStarlightVersion)" ValueName="StarLightInstallFolder" DefaultValue="$(ProgramFiles)\StarLight" Condition="$(StarlightVersion) != $(CurrentStarlightVersion)">
							<Output TaskParameter="Value" PropertyName="StarLightInstallFolder" />
						</RegistryRead>
						<RegistryRead KeyName="HKEY_LOCAL_MACHINE\Software\Composestar\StarLight\$(CurrentStarlightVersion)" ValueName="WeaveStrategiesFolder" DefaultValue="$(ProgramFiles)\StarLight\WeaveStrategies\" Condition="$(StarlightVersion) != $(CurrentStarlightVersion)">
							<Output TaskParameter="Value" PropertyName="WeaveStrategiesFolder" />
						</RegistryRead>

						<!-- update registry -->
						<RegistryWrite KeyName="HKEY_LOCAL_MACHINE\Software\Composestar\StarLight" ValueName="CurrentVersion" Value="$(StarlightVersion)" Condition="$(StarlightVersion) != $(CurrentStarlightVersion)" />
						<RegistryWrite KeyName="HKEY_LOCAL_MACHINE\Software\Composestar\StarLight\$(StarlightVersion)" ValueName="StarLightInstallFolder" Value="$(StarLightInstallFolder)" Condition="$(StarlightVersion) != $(CurrentStarlightVersion)" />
						<RegistryWrite KeyName="HKEY_LOCAL_MACHINE\Software\Composestar\StarLight\$(StarlightVersion)" ValueName="WeaveStrategiesFolder" Value="$(WeaveStrategiesFolder)" Condition="$(StarlightVersion) != $(CurrentStarlightVersion)" />
					</Target>
				</Project>
			</build>
		</dn:msbuild>

		<fileset dir="Source" id="AssemblyInfoFiles">
			<exclude name="Compiletime/**" />
			<exclude name="Tests/**" />
			<include name="**/AssemblyInfo.cs" />
		</fileset>

		<replaceregexp>
			<regexp pattern="(\[assembly: AssemblyVersion\(&quot;)[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(&quot;\)\])" />
			<substitution expression="\1${version.starlight}.0\2" />
			<fileset refid="AssemblyInfoFiles" />
		</replaceregexp>
		<replaceregexp>
			<regexp pattern="(\[assembly: AssemblyFileVersion\(&quot;)[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(&quot;\)\])" />
			<substitution expression="\1${version.starlight}.0\2" />
			<fileset refid="AssemblyInfoFiles" />
		</replaceregexp>

	</target>

	<target name="build" depends="init_local,msbuild_init" description="Build the StarLight implementation of Compose*">
		<antcall target="build_compiletime" inheritRefs="true" />
		<antcall target="build_core_elements" inheritRefs="true" />
		<antcall target="build_weaving" inheritRefs="true" />
		<antcall target="build_expansion" inheritRefs="true" />
		<antcall target="build_vsi" inheritRefs="true" />
	</target>

	<target name="build_compiletime" depends="init_local" description="Build Compose* StarLight Compiletime">
		<ant target="build" dir="Source/Compiletime" inheritRefs="true" />
	</target>

	<target name="build_core_elements" description="Build Compose* StarLight CoreElements">
		<ant target="build" dir="Source/StarLight.Weaving" inheritRefs="true" />
	</target>

	<target name="build_weaving" description="Build Compose* StarLight Weaving Strategies">
		<ant target="build" dir="Source/StarLight.Weaving.BuiltIn" inheritRefs="true" />
	</target>

	<target name="build_expansion" description="Build Compose* StarLight Weaving Strategies">
		<ant target="build" dir="Source/SigExpander" inheritRefs="true" />
	</target>

	<target name="build_vsi" description="Build Compose* StarLight VS Integration">
		<ant target="build" dir="Source/VSIntegration/" inheritRefs="true" />
	</target>

	<!-- deploy -->

	<target name="install">
		<antcall target="deploy" inheritRefs="true" />
	</target>

	<target name="deploy" depends="init_local,msbuild_init" description="Deploy the StarLight implementation of Compose*">
		<antcall target="deploy_compiletime" inheritRefs="true" />
		<antcall target="deploy_core_elements" inheritRefs="true" />
		<antcall target="deploy_weaving" inheritRefs="true" />
		<antcall target="deploy_expansion" inheritRefs="true" />
		<antcall target="deploy_vsi" inheritRefs="true" />
		<antcall target="deploy_misc" inheritRefs="true" />
	</target>

	<target name="deploy_compiletime" description="Deploy Compose* StarLight Compiletime">
		<ant target="deploy" dir="Source/Compiletime" inheritRefs="true" />
	</target>

	<target name="deploy_core_elements" description="Deploy Compose* StarLight CoreElements">
		<ant target="deploy" dir="Source/StarLight.Weaving" inheritRefs="true" />
	</target>

	<target name="deploy_weaving" description="Deploy Compose* StarLight Weaving Strategies">
		<ant target="deploy" dir="Source/StarLight.Weaving.BuiltIn" inheritRefs="true" />
	</target>

	<target name="deploy_expansion" description="Build Compose* StarLight Weaving Strategies">
		<ant target="deploy" dir="Source/SigExpander" inheritRefs="true" />
	</target>

	<target name="deploy_vsi" description="Deploy Compose* StarLight VS Integration">
		<ant target="deploy" dir="Source/VSIntegration/" inheritRefs="true" />
	</target>

	<target name="deploy_misc" depends="init" description="Deploy misc files">
		<copy todir="${starlight.installdir}">
			<fileset dir="Setup/installed">
				<include name="*.xml" />
				<include name="*.css" />
			</fileset>
		</copy>
	</target>

	<!-- QA -->

	<target name="init_qa" depends="init_local">
		<mkdir dir="${out.qa.starlight}" />
	</target>

	<target name="findbugs" depends="init_qa" description="Execute FindBugs">
		<findbugs home="${bin.findbugs}" output="xml:withMessages" effort="${findbugs.effort}" reportLevel="${findbugs.reportLevel}" outputFile="${out.qa.starlight}/findbugs-result.xml" excludeFilter="${bin.findbugs}/exclude.xml" jvmargs="${findbugs.jvmargs}">
			<class location="${build.starlight}/source/Compiletime/${out.build}" />
			<sourcePath path="${build.starlight}/source/Compiletime/src" />
			<auxClasspath refid="lib.core" />
			<auxClasspath>
				<pathelement path="${build.core}/Compiletime/${out.jar.core}" />
				<pathelement path="${build.starlight}/Source/Compiletime/lib/xmltypes.jar" />
				<pathelement path="${build.starlight}/Source/Compiletime/lib/xbean.jar" />
			</auxClasspath>
		</findbugs>
		<xslt in="${out.qa.starlight}/findbugs-result.xml" out="${out.qa.starlight}/findbugs-result.html" style="${findbugs.style}" />
	</target>

	<target name="checkstyle" depends="init_qa" description="Run CheckStyle code proof reading">
		<checkstyle config="${bin.checkstyle}/star_checks.xml" failOnViolation="false" classpathref="lib.starlight">
			<formatter type="xml" toFile="${out.qa.starlight}/checkstyle-result.xml" />
			<property key="config_loc" value="${bin.checkstyle}" />
			<fileset dir="${build.starlight}/source/Compiletime/src">
				<include name="**/*.java" />
				<exclude name="Composestar/DotNET/DUMMER/JSharpLexer.java" />
				<exclude name="Composestar/DotNET/DUMMER/JSharpRecognizer.java" />
				<exclude name="Composestar/DotNET/DUMMER/JSharpTokenTypes.java" />
			</fileset>
		</checkstyle>
		<xslt in="${out.qa.starlight}/checkstyle-result.xml" out="${out.qa.starlight}/checkstyle-result.html" style="${checkstyle.style}" />
	</target>

	<target name="build_codeanalysis" depends="init_local" description="Build .net projects for code analysis">
		<msbuild solution="${MSBuildTasks.dir}/StarLight.MSBuild.Tasks.csproj" target="build" config="Debug" />
	</target>

	<target name="fxcop_init">
		<mkdir dir="${out.fxcop.starlight}" />
	</target>

	<target name="fxcop" depends="build_codeanalysis,fxcop_init" description="Build all the outputs and run fxcop">
		<fxcop reportfile="${out.fxcop.starlight}/fxcop.html" files="${MSBuildTasks.dir}/Bin/Debug/Composestar*.dll" />
	</target>

	<!-- documentation -->

	<target name="documentation.init" depends="init_local" unless="available.hhc">
		<!-- 
			Output a warning if the hhc executable is not found in the 'C:\Program Files\HTML Help Workshop' folder,
			it might be found by Sandcastle in another folder however, so don't fail...
		-->
		<echo level="warning">HTML Help Compiler (hhc.exe) not found, CHM file may not be created!</echo>
	</target>

	<target name="documentation.build">
		<echo level="info">Building assembly and documentation files...</echo>

		<!-- Build dependencies -->
		<msbuild solution="Libraries\cecil\Mono.Cecil.csproj" target="build" config="release" />
		<msbuild solution="Source\CoreServices\StarLight.CoreServices.csproj" target="build" config="release" />
		<msbuild solution="Source\Repository\DataStoreContainer.csproj" target="build" config="release" />
		<msbuild solution="Source\StarLightEntities\StarLightEntities.csproj" target="build" config="release" />

		<!-- Build assemblies -->
		<msbuild solution="Source\ContextInfo\StarLight.ContextInfo.csproj" target="build" config="release" />
		<msbuild solution="Source\StarLight.Filters\StarLight.Filters.csproj" target="build" config="release" />
		<msbuild solution="Source\StarLight.Weaving\StarLight.Weaving.csproj" target="build" config="release" />
		<msbuild solution="Source\Utilities\Cecil\CecilUtilities.csproj" target="build" config="release" />
	</target>

	<target name="documentation" description="Create StarLight documentation" depends="init_local,documentation.init,documentation.build">
		<!-- Run Sandcastle -->
		<exec dir="${build.starlight}${file.separator}documentation" executable="${bin.sandcastle}">
			<arg value="${build.starlight}${file.separator}documentation${file.separator}SandcastleHelpStarLight.shfb" />
		</exec>

		<!-- ARM -->
		<delete file="Documentation/ARM.pdf" />
		<svn>
			<export srcUrl="https://composestar.svn.sourceforge.net/svnroot/composestar/documentation/ARM/ARM.pdf" destPath="Documentation" />
		</svn>
	</target>

	<!-- QA tasks -->

	<target name="qa" description="Execute Quality Assurance tasks">
		<antcall target="fxcop_starlight" inheritRefs="true" />
		<antcall target="findbugs_starlight" inheritRefs="true" />
		<antcall target="checkstyle_starlight" inheritRefs="true" />
	</target>

	<target name="fxcop_starlight" depends="init_local" if="enabled.starlight">
		<ant target="fxcop" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="findbugs_starlight" depends="init_local" if="enabled.starlight">
		<ant target="findbugs" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="checkstyle_starlight" depends="init_local" if="enabled.starlight">
		<ant target="checkstyle" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<!-- Installer -->

	<target name="build_installer" depends="init_local,build_compiletime,documentation" description="Create the WIX installer for StarLight">
		<ant target="build" dir="${build.starlight}${file.separator}Setup" inheritRefs="true" />
	</target>

	<target name="install_starlight" description="Run the StarLight installer">
		<!-- todo -->
	</target>

	<target name="uninstall_starlight" description="Run the StarLight installer to uninstall">
		<!-- todo -->
	</target>

	<!-- Testing -->

	<target name="test" depends="init_local,init_test" description="Execute Tests on the StarLight code other then QA tests">
		<antcall target="test_junit" inheritRefs="true" />
		<antcall target="test_nunit" inheritRefs="true" />
		<!--
		<antcall target="test_ntime" /> 
		Disabled, because the tests do not work correctly
		-->
		<ant dir="Examples" target="versioncheck" inheritRefs="true" />
		<ant dir="Source/VSIntegration" target="test" inheritRefs="true" />
		<antcall target="systemtest" inheritRefs="true" />
	</target>

	<target name="init_test">
		<mkdir dir="${out.nunit}" />
	</target>

	<target name="test_junit">
		<ant target="unittest" dir="${build.core}/Compiletime" inheritRefs="true" />
	</target>

	<target name="init_nunit" depends="init_local" description="Build the NUnit projects">
		<echo level="info">Compiling .NET NUnit projects</echo>
		<msbuild solution="${path.nunitprojects}TestContextInfo${file.separator}ContextInfo.Tests.NUnit.csproj" target="build" config="debug" />
		<msbuild solution="${path.nunitprojects}TestCpsFileParser${file.separator}CpsFileParser.Tests.NUnit.csproj" target="build" config="debug" />
		<msbuild solution="${path.nunitprojects}TestRepository${file.separator}Repository.Tests.NUnit.csproj" target="build" config="debug" />
	</target>

	<target name="test_nunit" depends="init_nunit" description="Run the NUnit tests">
		<echo level="info">Running NUnit</echo>
		<exec executable="${path.nunit}nunit-console.exe" failonerror="true">
			<arg value="${path.nunitprojects}TestContextInfo${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.ContextInfo.UnitTests.dll" />
			<arg value="/xml=${out.nunit}${file.separator}UnitTestContextInfo-Results.xml" />
			<arg value="/nologo" />
		</exec>
		<exec executable="${path.nunit}nunit-console.exe" failonerror="true">
			<arg value="${path.nunitprojects}TestCpsFileParser${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.CpsParser.UnitTests.dll " />
			<arg value="/xml=${out.nunit}${file.separator}UnitTestParser-Results.xml" />
			<arg value="/nologo" />
		</exec>
		<exec executable="${path.nunit}nunit-console.exe" failonerror="true">
			<arg value="${path.nunitprojects}TestRepository${file.separator}bin${file.separator}debug${file.separator}Composestar.Repository.UnitTests.dll" />
			<arg value="/xml=${out.nunit}${file.separator}UnitTestRepository-Results.xml" />
			<arg value="/nologo" />
		</exec>
	</target>

	<target name="init_ntime" depends="init_local" description="Build the NTime projects">
		<echo level="info">Compiling .NET NTime projects</echo>
		<msbuild solution="${path.ntimeprojects}AllPerformanceTests${file.separator}AllPerformanceTests.csproj" target="build" config="debug" />
	</target>

	<target name="test_ntime" depends="init_ntime" description="Run the NTime tests">
		<echo level="info">Running NTime</echo>
		<exec executable="${path.ntime}ntime.exe" failonerror="true">
			<arg value="${path.ntimeprojects}AllPerformanceTests${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.CpsParser.PerformanceTests.dll" />
			<arg value="${path.ntimeprojects}AllPerformanceTests${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.ILAnalyzer.PerformanceTests.dll" />
			<arg value="${path.ntimeprojects}AllPerformanceTests${file.separator}bin${file.separator}debug${file.separator}Composestar.Repository.PerformanceTests.dll" />
		</exec>
	</target>

	<target name="systemtest" description="Runs the system test">
		<antcall target="systemtest_build" inheritRefs="true" />
		<antcall target="systemtest_exec" inheritRefs="true" />
		<antcall target="example_performance" inheritRefs="true" inheritAll="true" />
	</target>

	<target name="systemtest_build" depends="init_local">

		<fileset id="systemtest.solutions" dir="${build.starlight}/Examples">
			<include name="Testing/Concerns.sln" />
			<include name="iTextSharp/iTextSharp.sln" />
			<include name="Pacman/Pacman.sln" />
			<include name="PacmanTwo/PacmanTwo.sln" />
			<include name="RuBCoDeTest/*.sln" />
			<include name="TestCases/*/*.sln" />
			<include name="Wedding/Wedding.sln" />
			<include name="DesignPatterns/Implementations/Bridge/*.sln" />
			<include name="DesignPatterns/Implementations/Decorator/*.sln" />
			<include name="DesignPatterns/Implementations/Proxy/*.sln" />
			<include name="DesignPatterns/Implementations/Mediator/*.sln" />
		</fileset>

		<fileset id="systemtest.customfilters" dir="${build.starlight}/Examples">
			<include name="CustomFilters/*.sln" />
			<include name="RuBCoDeTest/RuBCoDeTestFilters/*.sln" />
			<include name="DesignPatterns/Annotations/DesignPatternAnnotations.sln" />
		</fileset>

		<echo level="info">Cleaning tests</echo>
		<cs:dn_msbatch target="Clean">
			<fileset refid="systemtest.solutions" />
			<fileset refid="systemtest.customfilters" />
		</cs:dn_msbatch>

		<echo level="info">Tests setup (custom filters)</echo>
		<cs:dn_msbatch failOnError="true">
			<fileset refid="systemtest.customfilters" />
		</cs:dn_msbatch>

		<echo level="info">Building tests</echo>
		<cs:dn_msbatch failOnError="true">
			<fileset refid="systemtest.solutions" />
		</cs:dn_msbatch>

	</target>

	<target name="systemtest_exec" depends="init_local">

		<echo level="info">Running tests</echo>
		<cs:test>
			<fileset dir="${build.starlight}/Examples">
				<include name="**/systemtest.bat" />
			</fileset>
		</cs:test>

	</target>

	<!-- fancy menu -->

	<target name="clean_deploy" depends="clean,deploy" />
	<target name="clean_deploy_test" depends="clean,deploy,test" />

	<target name="select">
		<taskdef resource="com/sardak/antform/taskdefs.properties" classpath="${basedir}/Ant/lib/antform.jar" />
		<antmenu image="images/logos/logofull.png">

			<antMenuItem name="Advanced">
				<antMenuItem name="Clean" target="clean" />
				<antMenuItem name="Build">
					<antMenuItem name="Build all" target="build" />
					<antMenuItem name="Rebuild all" target="rebuild" />
					<antMenuItem name="Compiletime" target="build_compiletime" />
					<antMenuItem name="CoreElement" target="build_core_elements" />
					<antMenuItem name="WeaveStrategy" target="build_weaving" />
					<antMenuItem name="MSBuildTasks" target="build_msbuild" />
					<antMenuItem name="VSIntegration" target="build_vs" />
					<antMenuItem name="Installer" target="build_installer" />
				</antMenuItem>
				<antMenuItem name="Deployment">
					<antMenuItem name="Deploy all" target="deploy" />
					<antMenuItem name="Compiletime" target="deploy_compiletime" />
					<antMenuItem name="CoreElements" target="deploy_core_elements" />
					<antMenuItem name="WeaveStrategy" target="deploy_weaving" />
					<antMenuItem name="MSBuildTasks" target="deploy_msbuild" />
					<antMenuItem name="VSIntegration" target="deploy_vs" />
				</antMenuItem>
				<!--
				<antMenuItem name="Publish">
					<antMenuItem name="Create Installer" target="build_installer"/>
					<antMenuItem name="Install"       target="install_starlight"/>
					<antMenuItem name="Uninstall"     target="uninstall_starlight"/>
				</antMenuItem>
				-->
				<antMenuItem name="Run tests">
					<antMenuItem name="All" target="test" />
					<antMenuItem name="JUnit" target="test_junit" />
					<antMenuItem name="NUnit" target="test_nunit" />
					<antMenuItem name="NTime" target="test_ntime" />
					<antMenuItem name="Systemtest" target="systemtest" />
				</antMenuItem>
				<antMenuItem name="QA">
					<antMenuItem name="All" target="qa" />
					<antMenuItem name="FxCop" target="fxcop_starlight" />
					<antMenuItem name="FindBugs" target="findbugs_starlight" />
					<antMenuItem name="CheckStyle" target="checkstyle_starlight" />
				</antMenuItem>
				<antMenuItem name="Documentation">
					<antMenuItem name="StarLight" target="documentation" />
				</antMenuItem>
			</antMenuItem>

			<link label="Build" target="build" />
			<link label="Clean, deploy" target="clean_deploy" />
			<link label="Clean, deploy, test" target="clean_deploy_test" />
			<link label="Quality Assurance" target="qa" />
			<link label="Documentation" target="documentation" />
			<separator />
			<link label="Cancel" target="cancel" />

		</antmenu>
	</target>

</project>
