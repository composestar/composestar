<?xml version="1.0" encoding="UTF-8"?>
<project name="ComposeStar/StarLight" default="build" xmlns:dn="antlib:org.apache.ant.dotnet">

	<condition property="build.core" value="${basedir}${file.separator}..${file.separator}Core">
		<and>
			<not>
				<isset property="build.core" />
			</not>
			<available file="${basedir}${file.separator}..${file.separator}Core${file.separator}common.xml" />
		</and>
	</condition>
	<import file="${build.core}${file.separator}common.xml" />

	<echo>Processing: ${ant.project.name} ...</echo>
	<description>The StarLight implementation of Compose*</description>

	<property name="out.qa.starlight"    value="QualityAssurance"/>
	<property name="out.fxcop.starlight" value="QualityAssurance"/>
	<property name="out.nunit" value="Source${file.separator}Tests${file.separator}TestResults"/>

	<property name="MSBuildTasks.dir" location="Source/VSIntegration/MSBuildTasks"/>
	<property name="path.nunitprojects" value="Source${file.separator}Tests${file.separator}UnitTests${file.separator}" />
	<property name="path.ntimeprojects" value="Source${file.separator}Tests${file.separator}PerformanceTests${file.separator}" />

	<!-- clean -->

	<target name="clean" depends="init" description="Cleanup the result of compilations">
		<delete dir="${out.qa.starlight}" />
		<delete dir="${out.fxcop.starlight}" />
		<delete dir="${out.nunit}" />
		<delete file="Documentation\ComposeStar-StarLight.chm" />
		<delete file="Documentation\LastBuild.log" />
		<ant target="clean" dir="Source/Compiletime" />
		<ant target="clean" dir="Source/StarLight.Weaving.BuildIn" />
		<ant target="clean" dir="Source/VSIntegration/MSBuildTasks" />
		<ant target="clean" dir="Source/VSIntegration/VisualStudio.Project" />
	</target>

	<!-- build -->

	<target name="build" description="Build the StarLight implementation of Compose*">
		<antcall target="build_compiletime"/>
		<antcall target="build_msbuild"/>
		<antcall target="build_vs"/>
		<antcall target="build_ws"/>
	</target>

	<target name="build_compiletime" depends="init" description="Build Compose* StarLight Compiletime">
		<ant target="build" dir="${build.core}/Compiletime"/>
		<ant target="build" dir="Source/Compiletime" />
	</target>

	<target name="build_msbuild" description="Build Compose* StarLight MSBuild tasks">
		<ant target="build" dir="Source/VSIntegration/MSBuildTasks" />
	</target>

	<target name="build_vs" description="Build Compose* StarLight VS Integration">
		<ant target="build" dir="Source/VSIntegration/VisualStudio.Project" />
	</target>

	<target name="build_ws" description="Build Compose* StarLight WeaveStrategy">
		<ant target="build" dir="Source/StarLight.Weaving.BuildIn" />
	</target>

	<!-- deploy -->

	<target name="deploy" description="Deploy the StarLight implementation of Compose*">
		<antcall target="deploy_compiletime"/>
		<antcall target="deploy_msbuild"/>
		<antcall target="deploy_vs"/>
		<antcall target="deploy_ws"/>
	</target>

	<target name="deploy_compiletime" description="Deploy Compose* StarLight Compiletime">
		<ant target="deploy" dir="Source/Compiletime" />
	</target>

	<target name="deploy_msbuild" description="Deploy Compose* StarLight MSBuild tasks">
		<ant target="deploy" dir="Source/VSIntegration/MSBuildTasks" />
	</target>

	<target name="deploy_vs" description="Deploy Compose* StarLight VS Integration">
		<ant target="deploy" dir="Source/VSIntegration/VisualStudio.Project" />
	</target>

	<target name="deploy_ws" description="Deploy Compose* StarLight WeaveStrategy">
		<ant target="deploy" dir="Source/StarLight.Weaving.BuildIn" />
	</target>

	<!-- QA -->

	<target name="init_qa" depends="init">
		<mkdir dir="${out.qa.starlight}" />
	</target>

	<target name="findbugs" depends="init_qa" description="Execute FindBugs">
		<findbugs home="${bin.findbugs}" output="xml:withMessages" effort="${findbugs.effort}" reportLevel="${findbugs.reportLevel}" outputFile="${out.qa.starlight}/findbugs-result.xml" excludeFilter="${bin.findbugs}/exclude.xml" jvmargs="${findbugs.jvmargs}">
			<class location="${build.starlight}/source/Compiletime/${out.build}" />
			<sourcePath path="${build.starlight}/source/Compiletime/src" />
			<auxClasspath refid="lib.core" />
			<auxClasspath>
				<pathelement path="${build.core}/Compiletime/${out.jar.core}" />
				<pathelement path="${build.starlight}/libraries/xmltypes.jar" />
			</auxClasspath>
		</findbugs>
		<xslt in="${out.qa.starlight}/findbugs-result.xml" out="${out.qa.starlight}/findbugs-result.html" style="${findbugs.style}" />
	</target>

	<target name="checkstyle" depends="init_qa" description="Run CheckStyle code proof reading">
		<checkstyle config="${bin.checkstyle}/star_checks.xml" failOnViolation="false" classpathref="lib.starlight">
			<formatter type="xml" toFile="${out.qa.starlight}/checkstyle-result.xml" />
			<property key="config_loc" value="${bin.checkstyle}" />
			<FileSet dir="${build.starlight}/source/Compiletime/src">
				<include name="**/*.java" />
				<exclude name="Composestar/DotNET/DUMMER/JSharpLexer.java" />
				<exclude name="Composestar/DotNET/DUMMER/JSharpRecognizer.java" />
				<exclude name="Composestar/DotNET/DUMMER/JSharpTokenTypes.java" />
			</FileSet>
		</checkstyle>
		<xslt in="${out.qa.starlight}/checkstyle-result.xml" out="${out.qa.starlight}/checkstyle-result.html" style="${checkstyle.style}" />
	</target>

	<target name="build_codeanalysis" depends="init" description="Build .net projects for code analysis">
		<msbuild solution="${MSBuildTasks.dir}/StarLight.MSBuild.Tasks.csproj" target="build" config="Debug" />
	</target>

	<target name="fxcop_init" >
		<mkdir dir="${out.fxcop.starlight}" />
	</target>

	<target name="fxcop" depends="build_codeanalysis,fxcop_init" description="Build all the outputs and run fxcop">
		<fxcop reportfile="${out.fxcop.starlight}/fxcop.txt"
		       files="${MSBuildTasks.dir}/Bin/Debug/Composestar*.dll"/>
	</target>

	<!-- documentation -->

	<target name="documentation.init" unless="available.hhc">
		<!-- 
			Output a warning if the hhc executable is not found in the 'C:\Program Files\HTML Help Workshop' folder,
			it might be found by Sandcastle in an other folder however, so no fail...
		-->
		<echo level="warning">HTML Help Compiler (hhc.exe) not found, CHM file may not be created!</echo>
	</target>

	<target name="documentation.build">
		<echo level="info">Building assembly and documentation files...</echo>

		<!-- Build dependencies -->
		<msbuild solution="Libraries\cecil\Mono.Cecil.csproj" target="build" config="release" />
		<msbuild solution="Source\CoreServices\StarLight.CoreServices.csproj" target="build" config="release" />
		<msbuild solution="Source\Repository\DataStoreContainer.csproj" target="build" config="release" />
		<msbuild solution="Source\StarLightEntities\StarLightEntities.csproj" target="build" config="release" />

		<!-- Build assemblies -->
		<msbuild solution="Source\ContextInfo\StarLight.ContextInfo.csproj" target="build" config="release" />
		<msbuild solution="Source\StarLight.Filters\StarLight.Filters.csproj" target="build" config="release" />
		<msbuild solution="Source\StarLight.Weaving\StarLight.Weaving.csproj" target="build" config="release" />
		<msbuild solution="Source\Utilities\Cecil\CecilUtilities.csproj" target="build" config="release" />
	</target>

	<target name="documentation" description="Create StarLight documentation" depends="documentation.init,documentation.build">
		<!-- Run Sandcastle -->
		<exec dir="${build.starlight}${file.separator}documentation" executable="${bin.sandcastle}">
			<arg value="${build.starlight}${file.separator}documentation${file.separator}SandcastleHelpStarLight.shfb"/>
		</exec>
	</target>

	<!-- QA tasks -->

	<target name="qa" description="Execute Quality Assurance tasks">
		<antcall target="fxcop_starlight" />
		<antcall target="findbugs_starlight" />
		<antcall target="checkstyle_starlight" />
	</target>

	<target name="fxcop_starlight" depends="init" if="enabled.starlight">
		<ant target="fxcop" dir="${build.starlight}" />
	</target>

	<target name="findbugs_starlight" depends="init" if="enabled.starlight">
		<ant target="findbugs" dir="${build.starlight}" />
	</target>

	<target name="checkstyle_starlight" depends="init" if="enabled.starlight">
		<ant target="checkstyle" dir="${build.starlight}" />
	</target>

	<!-- Installer -->

	<target name="build_installer" depends="build_compiletime,documentation" description="Create the WIX installer for StarLight">
		<ant target="build" dir="${build.starlight}${file.separator}Setup" />
	</target>

	<target name="install_starlight" description="Run the StarLight installer">
		<!-- todo -->
	</target>

	<target name="uninstall_starlight" description="Run the StarLight installer to uninstall">
		<!-- todo -->
	</target>

	<!-- Testing -->

	<target name="test" depends="init_test" description="Execute Tests on the StarLight code other then QA tests">
		<antcall target="test_nunit" />
		<!-- <antcall target="test_ntime" /> 
		Disabled, because the tests do not work correctly
		-->
	</target>

	<target name="init_test">
		<mkdir dir="${out.nunit}" />
	</target>

	<target name="init_nunit" description="Build the NUnit projects">
		<echo>Compiling .NET NUnit projects</echo>
		<msbuild solution="${path.nunitprojects}TestContextInfo${file.separator}ContextInfo.Tests.NUnit.csproj" target="build" config="debug" />
		<msbuild solution="${path.nunitprojects}TestCpsFileParser${file.separator}CpsFileParser.Tests.NUnit.csproj" target="build" config="debug" />
		<msbuild solution="${path.nunitprojects}TestRepository${file.separator}Repository.Tests.NUnit.csproj" target="build" config="debug" />
	</target>

	<target name="test_nunit" depends="init_nunit" description="Run the NUnit tests">
		<echo>Running NUnit</echo>
		<exec executable="${path.nunit}nunit-console.exe" failonerror="true">
			<arg value="${path.nunitprojects}TestContextInfo${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.ContextInfo.UnitTests.dll" />
			<arg value="/xml=${out.nunit}${file.separator}UnitTestContextInfo-Results.xml" />
			<arg value="/nologo" />
		</exec>
		<exec executable="${path.nunit}nunit-console.exe" failonerror="true">
			<arg value="${path.nunitprojects}TestCpsFileParser${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.CpsParser.UnitTests.dll " />
			<arg value="/xml=${out.nunit}${file.separator}UnitTestParser-Results.xml" />
			<arg value="/nologo" />
		</exec>
		<exec executable="${path.nunit}nunit-console.exe" failonerror="true">
			<arg value="${path.nunitprojects}TestRepository${file.separator}bin${file.separator}debug${file.separator}Composestar.Repository.UnitTests.dll" />
			<arg value="/xml=${out.nunit}${file.separator}UnitTestRepository-Results.xml" />
			<arg value="/nologo" />
		</exec>
	</target>

	<target name="init_ntime" description="Build the NTime projects">
		<echo>Compiling .NET NTime projects</echo>
		<msbuild solution="${path.ntimeprojects}AllPerformanceTests${file.separator}AllPerformanceTests.csproj" target="build" config="debug" />
	</target>

	<target name="test_ntime" depends="init_ntime" description="Run the NTime tests">
		<echo>Running NTime</echo>
		<exec executable="${path.ntime}ntime.exe" failonerror="true">
			<arg value="${path.ntimeprojects}AllPerformanceTests${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.CpsParser.PerformanceTests.dll" />
			<arg value="${path.ntimeprojects}AllPerformanceTests${file.separator}bin${file.separator}debug${file.separator}Composestar.StarLight.ILAnalyzer.PerformanceTests.dll" />
			<arg value="${path.ntimeprojects}AllPerformanceTests${file.separator}bin${file.separator}debug${file.separator}Composestar.Repository.PerformanceTests.dll" />
		</exec>
	</target>

	<!-- fancy menu -->

	<target name="clean_deploy" depends="clean,deploy"></target>

	<target name="select" depends="init">
		<taskdef resource="com/sardak/antform/taskdefs.properties" classpath="${basedir}/Ant/lib/antform.jar"/>
		<antmenu image="images${file.separator}logos${file.separator}logofull.png">

			<antMenuItem name="Advanced" >
				<antMenuItem name="Clean"  target="clean"/>
				<antMenuItem name="Build">
					<antMenuItem name="Build all"     target="build"/>
					<antMenuItem name="Rebuild all"   target="rebuild"/>
					<antMenuItem name="Compiletime"   target="build_compiletime"/>
					<antMenuItem name="MSBuildTasks"  target="build_msbuild"/>
					<antMenuItem name="VSIntegration" target="build_vs"/>
					<antMenuItem name="WeaveStrategy" target="build_ws"/>
					<antMenuItem name="Installer"     target="build_installer"/>
				</antMenuItem>
				<antMenuItem name="Deployment">
					<antMenuItem name="Deploy"        target="deploy"/>
					<antMenuItem name="Install"       target="install_starlight"/>
					<antMenuItem name="Uninstall"     target="uninstall_starlight"/>
				</antMenuItem>
				<!--
				<antMenuItem name="Publish">
					<antMenuItem name="Create Installer" target="build_installer"/>
				</antMenuItem>
				-->
				<antMenuItem name="Run tests">
					<antMenuItem name="All"           target="test"/>
					<antMenuItem name="NUnit"         target="test_nunit"/>
					<antMenuItem name="NTime"         target="test_ntime"/>
				</antMenuItem>
				<antMenuItem name="QA">
					<antMenuItem name="All"           target="qa"/>
					<antMenuItem name="FxCop"         target="fxcop_starlight"/>
					<antMenuItem name="FindBugs"      target="findbugs_starlight"/>
					<antMenuItem name="CheckStyle"    target="checkstyle_starlight"/>
				</antMenuItem>
				<antMenuItem name="Documentation">
					<antMenuItem name="StarLight"     target="documentation"/>
				</antMenuItem>
			</antMenuItem>

			<link label="Build" target="build"/>
			<link label="Clean deploy" target="clean_deploy"/>
			<link label="Quality Assurance" target="qa"/>
			<link label="Testing" target="test"/>
			<link label="Documentation" target="documentation"/>
			<separator/>
			<link label="Cancel" target="cancel"/>

		</antmenu>
	</target>

</project>
