// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace TestDataStore
{
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BaseAccessor {
    
    protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;
    
    protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) {
        m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
    }
    
    protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) : 
            this(null, type) {
    }
    
    internal virtual object Target {
        get {
            return m_privateObject.Target;
        }
    }
    
    public override string ToString() {
        return this.Target.ToString();
    }
    
    public override bool Equals(object obj) {
        if (typeof(BaseAccessor).IsInstanceOfType(obj)) {
            obj = ((BaseAccessor)(obj)).Target;
        }
        return this.Target.Equals(obj);
    }
    
    public override int GetHashCode() {
        return this.Target.GetHashCode();
    }
}


[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Composestar_DataStore_DataStoreContainerAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::Composestar.DataStore.DataStoreContainer));
    
    internal Composestar_DataStore_DataStoreContainerAccessor(global::Composestar.DataStore.DataStoreContainer target) : 
            base(target, m_privateType) {
    }
    
    internal static string databaseFilename {
        get {
            string ret = ((string)(m_privateType.GetStaticField("databaseFilename")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("databaseFilename", value);
        }
    }
    
    internal bool _open {
        get {
            bool ret = ((bool)(m_privateObject.GetField("_open")));
            return ret;
        }
        set {
            m_privateObject.SetField("_open", value);
        }
    }
    
    internal global::com.db4o.ObjectContainer database {
        get {
            global::com.db4o.ObjectContainer ret = ((global::com.db4o.ObjectContainer)(m_privateObject.GetField("database")));
            return ret;
        }
        set {
            m_privateObject.SetField("database", value);
        }
    }
    
    internal static global::Composestar.DataStore.DataStoreContainer instance {
        get {
            global::Composestar.DataStore.DataStoreContainer ret = ((global::Composestar.DataStore.DataStoreContainer)(m_privateType.GetStaticField("instance")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("instance", value);
        }
    }
    
    internal static global::Composestar.DataStore.DataStoreContainer CreatePrivate() {
        object[] args = new object[0];
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(typeof(global::Composestar.DataStore.DataStoreContainer), new System.Type[0], args);
        return ((global::Composestar.DataStore.DataStoreContainer)(priv_obj.Target));
    }
   

}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class System_ObjectAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(object));
    
    internal System_ObjectAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal new object MemberwiseClone() {
        object[] args = new object[0];
        object ret = ((object)(m_privateObject.Invoke("MemberwiseClone", new System.Type[0], args)));
        return ret;
    }
}
}
