<?xml version="1.0" encoding="UTF-8"?>
<project name="ComposeStar/StarLight/Compiletime" default="build">

  <property name="build.core" value="../../../Core"/>
	<import file="${build.core}/common.xml"/>
	
	<echo>Processing: ${ant.project.name} ...</echo>	
	<description>The Compose* StarLight Compiletime</description>

	<!-- default path to xsd.exe (can be overridden in build.ini) -->
	<property name="xsd.exe" value="xsd.exe"/>

	<!-- clean -->

	<target name="clean" depends="init" description="clean the compilation results">
		
		<ant target="clean" dir="${build.core}/Compiletime" inheritRefs="true"/>

		<!-- Java build files -->
		<delete dir="${out.build}"/>
		<delete dir="${out.dist}"/>
		<delete>
			<fileset dir="src/Composestar">
				<include name="**/*.class"/>
			</fileset>
		</delete>

		<!-- xml beans -->
		<delete dir="${out.xmltypes}"/>
		
	</target>
	
	<target name="init_local" depends="init">

		<property name="out.xmltypes"     location="../StarLightEntities/obj/xmltypes"/>
		<property name="core.jar"         location="${build.core}/Compiletime/${out.jar.core}"/>
		<property name="starlight.jar"    location="${out.jar.starlight}"/>
		<property name="xmltypes.jar"     location="lib/xmltypes.jar"/>
		<property name="xmltypes-src.zip" location="lib/xmltypes-src.zip"/>
		
		<mkdir dir="${out.build}"/>
		<mkdir dir="${out.dist}"/>
		<mkdir dir="${out.xmltypes}"/>
	
	</target>

	<!-- build -->

	<target name="build" depends="init_local,build_core,compile,jar" description="Build the StarLight compiletime"/>

	<target name="build_core" depends="init">
		<ant target="build" dir="${build.core}/Compiletime" inheritRefs="true"/>
	</target>
	
	<target name="antlr">
		<!--
		<antlr target="${CSharpDummyGenerator}/Parse/csharp.g" outputdirectory="${CSharpDummyGenerator}/Parse">
			<classpath refid="lib.dotnet"/>
		</antlr>
		-->
	</target>
	
	<target name="create_xsd" depends="init_local">
		<msbuild solution="..\StarLightEntities\StarLightEntities.csproj" target="build" config="${msbuild.config}"/>
		<exec executable="${xsd.exe}" dir="..\StarLightEntities\bin\${msbuild.config}">
			<arg line="Composestar.StarLight.Entities.dll"/>
			<arg line="/outputdir:'${out.xmltypes}'"/>
		</exec>
	</target>
	
	<target name="build_xmltypes" depends="create_xsd">

		<path id="lib.xmlbeans">
			<pathelement path="../../Libraries/xmlbeans/xbean.jar"/>
			<pathelement path="../../Libraries/xmlbeans/jsr173_1.0_api.jar"/>
		</path>

		<taskdef name="xmlbean"
		         classname="org.apache.xmlbeans.impl.tool.XMLBean"
		         classpathref="lib.xmlbeans"/>

		<xmlbean classpathref="lib.xmlbeans"
		         schema="${out.xmltypes}/schema1.xsd" 
		         destfile="${xmltypes.jar}" 
		         srcgendir="${out.xmltypes}"
		         javasource="1.5"/>

		<zip destfile="${xmltypes-src.zip}"
		     basedir="${out.xmltypes}"/>

	</target>
	
	<target name="compile" depends="init_local,build_xmltypes">
		<javac srcdir="src/Composestar" destdir="${out.build}" classpathref="lib.starlight" source="${build.java.version}" target="${build.java.version}" debug="${build.debug}" deprecation="${build.deprecation}">
			<exclude name="**/AssemblyInfo.java"/>
			<exclude name="**/_svn" />
		</javac>
	</target>
	
	<target name="jar">
		<jar destfile="${starlight.jar}" basedir="${out.build}" manifest="src/MANIFEST.MF"/>
	</target>

	<!-- deploy -->

	<target name="deploy" depends="build" description="Deploy the StarLight compiletime">
		<copy todir="${starlight.installdir}\Compiletime">
			<fileset file="${core.jar}"/>
			<fileset file="${starlight.jar}"/>
			<fileset file="${xmltypes.jar}"/>
		</copy>
		<install_core todir="${starlight.installdir}"/>
	</target>
	
	
	<macrodef name="install_core" description="Install the core to a given directory">
		<attribute name="todir" description="Directory to copy the files to" />		
		<sequential>
			<!--
			<fail message="The destination directory @{todir} does not exist.">
				<condition>
					<not>
						<available file="@{todir}" />
					</not>
				</condition>                                                                                                                                  
			</fail>
			-->			
			<mkdir dir="@{todir}" />
			
			<copy todir="@{todir}/binaries">
			<fileset dir="${out.dist}"/>
			<fileset file="${build.core}/Compiletime/binaries/antlr/antlr.jar"/>
		</copy>
			<copy file="${build.core}/Compiletime/binaries/log4j/log4j-1.2.14.jar" todir="@{todir}/binaries"/>

			<copy todir="@{todir}/binaries/prolog">
			<fileset dir="${build.core}/Compiletime/binaries/prolog">
				<include name="prolog.jar"/>
				<include name="lib.pro"/>
				<include name="connector.pro"/>
			</fileset>
		</copy>

			<copy todir="@{todir}/binaries/groove">
			<fileset dir="${build.core}/Compiletime/binaries/groove">
				<include name="groove-1_2_0.jar"/>
				<include name="castor-0_9_5_2-xml.jar"/>
				<include name="jgraph.jar"/>
				<include name="xerces-2_6_0-xercesImpl.jar"/>
				<include name="xerces-2_6_0-xml-apis.jar"/>
			</fileset>
		</copy>
		</sequential>
	</macrodef>
	
</project>
