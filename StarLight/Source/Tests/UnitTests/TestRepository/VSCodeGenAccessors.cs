// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
#if !NUNIT
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace TestRepository
{
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BaseAccessor {
    
    protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;
    
    protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) {
        m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
    }
    
    protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) : 
            this(null, type) {
    }
    
    internal virtual object Target {
        get {
            return m_privateObject.Target;
        }
    }
    
    public override string ToString() {
        return this.Target.ToString();
    }
    
    public override bool Equals(object obj) {
        if (typeof(BaseAccessor).IsInstanceOfType(obj)) {
            obj = ((BaseAccessor)(obj)).Target;
        }
        return this.Target.Equals(obj);
    }
    
    public override int GetHashCode() {
        return this.Target.GetHashCode();
    }
}


[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Composestar_Repository_EntitiesAccessorAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::Composestar.Repository.EntitiesAccessor));
    
    internal Composestar_Repository_EntitiesAccessorAccessor(global::Composestar.Repository.EntitiesAccessor target) : 
            base(target, m_privateType) {
    }
    
    internal static global::Composestar.Repository.EntitiesAccessor m_Instance {
        get {
            global::Composestar.Repository.EntitiesAccessor ret = ((global::Composestar.Repository.EntitiesAccessor)(m_privateType.GetStaticField("m_Instance")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("m_Instance", value);
        }
    }
    
    internal global::System.Type[] _extraTypes {
        get {
            global::System.Type[] ret = ((global::System.Type[])(m_privateObject.GetField("_extraTypes")));
            return ret;
        }
        set {
            m_privateObject.SetField("_extraTypes", value);
        }
    }
    
    internal global::System.Type[] ExtraTypes {
        get {
            global::System.Type[] ret = ((global::System.Type[])(m_privateObject.GetProperty("ExtraTypes")));
            return ret;
        }
    }
    
    internal static global::Composestar.Repository.EntitiesAccessor CreatePrivate() {
        object[] args = new object[0];
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(typeof(global::Composestar.Repository.EntitiesAccessor), new System.Type[0], args);
        return ((global::Composestar.Repository.EntitiesAccessor)(priv_obj.Target));
    }
    
 
}
}
#endif