<?xml version="1.0" encoding="UTF-8"?>
<project name="ComposeStar/Java/Compiletime" default="build">

	<condition property="build.core" value="../../Core">
		<and>
			<not><isset property="build.core"/></not>
			<available file="../../Core/common.xml"/>
		</and>
	</condition>
	
	<import file="${build.core}/common.xml"/>
	
	<property name="Dummer.dir" location="src/Composestar/Java/DUMMER"/>
		
	<echo>Processing: ${ant.project.name} ...</echo>	
	<description>The Compose* Java Compiletime</description>

	<target name="clean" depends="init" description="clean the compilation results">
		<!-- Java build files -->
		<delete dir="${out.build}"/>
		<delete dir="${out.dist}"/>
		<delete>
			<fileset dir="src">
				<include name="**/*.class"/>
			</fileset>
		</delete>
		
		<!-- Java DummyGen -->
		<delete>
			<fileset dir="${Dummer.dir}">
				<include name="JavaLexer.java"/>
				<include name="JavaRecognizer.java"/>
				<include name="JavaTokenTypes.*"/>
				<include name="*.smap"/>
			</fileset>
		</delete>
	</target>

	<target name="init_local" depends="init">
		<mkdir dir="${out.build}"/>
		<mkdir dir="${out.dist}"/>
	</target>
	
	<target name="build" depends="init_local,antlr,compile_java,jar" description="build the Java compiletime"/>
	
	<target name="antlr">
		<antlr target="${Dummer.dir}/grammar/java.g" outputdirectory="${Dummer.dir}">
			<classpath refid="lib.core"/>
		</antlr>
	</target>
	
	<target name="compile_java" depends="init_local,antlr">
		<javac srcdir="src" destdir="${out.build}" classpathref="lib.java" source="${build.java.version}" target="${build.java.version}" debug="${build.debug}" deprecation="${build.deprecation}">
			<exclude name="**/AnnotationCollector.java"/>
		</javac>
	</target>
			
	<target name="jar" depends="compile_java">
		<jar destfile="${out.jar.java}" basedir="${out.build}"/>
	</target>
	
	<target name="install" depends="build" description="Install the Java compiletime">
		<!-- jar files -->
		<copy todir="${composestar.installdir}${file.separator}binaries">
			<fileset dir="${out.dist}"/>
		</copy>
	</target>

</project>