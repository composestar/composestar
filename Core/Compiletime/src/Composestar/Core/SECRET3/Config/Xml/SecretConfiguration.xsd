<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://composestar.sourceforge.net/schema/SecretConfiguration"
	elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns="http://composestar.sourceforge.net/schema/SecretConfiguration">
    <xsd:annotation>
    	<xsd:documentation>
    		Configuration file for the SECRET module. This scheme also doubles as definition for the generated reports.
    	</xsd:documentation>
    </xsd:annotation>
    <xsd:element name="secret" type="SecretConfig">
		<xsd:annotation>
			<xsd:documentation>
				The entry element for the secret configuration. It contains a list of resource, rule and action
				declarations (in any order and multiplicity).
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="Resource">
		<xsd:annotation>
			<xsd:documentation>
				Defines a resource and it's vocabulary. Resources definitions are not required per se, when an undefine
				resource is used a warning will be issued (unless configuration checking is disabled).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
            <xsd:element name="alias" maxOccurs="unbounded" minOccurs="0">
                <xsd:annotation>
                	<xsd:documentation>Alternative names for this resource. Avoid using this feature.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
            		<xsd:attribute name="name" type="ResourceNameType">
            			<xsd:annotation>
            				<xsd:documentation>The alternative name</xsd:documentation>
            			</xsd:annotation></xsd:attribute>
            	</xsd:complexType></xsd:element>
            <xsd:element name="operation" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						A possible operation on this resource. A warning will be issues when a operation is used on an
						resource which has not be defined previously.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="[A-Za-z][A-Za-z0-9]*"></xsd:pattern>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" use="required" type="ResourceNameType">
			<xsd:annotation>
				<xsd:documentation>
					The name of the resource. There are a few predefined names: message (a.k.a. msg), target, selector,
					return, arg, args. Any other name will be considered a custom resource.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="override" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					If set to true it will replace the previous definition. Otherwise it will simply append the
					vocabulary.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>

	</xsd:complexType>

	<xsd:complexType name="Rule">
		<xsd:annotation>
			<xsd:documentation>Defines a conflict rule.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="pattern" maxOccurs="1" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						A regular pattern that will be matched against a string of operations. The pattern language used
						is much like regular expression, but there are some key differences. This language operates on
						words, not characters like regular expressions. For example ab*c is interpreted as (ab)*c, thus
						ababc matches, but abbc does not. Characters classes are not available, so [a-z] can not be
						used. This languages does support negations of a set of words: ![foo,bar] matches everything
						except "foo" and "bar". There is also a limited set of qualifiers avaiable: *, + and ?. A single
						word can be matched with a period: .
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"></xsd:minLength>
						<xsd:whiteSpace value="collapse"></xsd:whiteSpace>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="message" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>A message to show when this rule is violated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="scope" maxOccurs="unbounded" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Defines a scope to which this rule applies. Without a single scope definition this rule will
						apply to all sequences.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:annotation>
						<xsd:documentation>
							Defines a scope. A scope consists of a scope type and the name of the object to match with.
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="type">
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="class"></xsd:enumeration>
										<xsd:enumeration value="method"></xsd:enumeration>
										<xsd:enumeration value="filter"></xsd:enumeration>
										<xsd:enumeration value="filteraction"></xsd:enumeration>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>

		</xsd:sequence>
		<xsd:attribute name="resource" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The resource this rule applies to.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="type">
			<xsd:annotation>
				<xsd:documentation>
					The type of rule, either a constraint (must not match) or an assertion (must match).
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="constraint"></xsd:enumeration>
					<xsd:enumeration value="assertion"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="Action">
		<xsd:annotation>
			<xsd:documentation>
				Defines a series of resource operations applied at a given execution model transitions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="label" maxOccurs="unbounded" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>One or more labels for which this action sequence applies.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="type" use="required">
                                <xsd:annotation>
                                	<xsd:documentation>
                                		Defines to what type this label applies, either an edge in the graph or a node. "filteraction" is a sepacial case, the name refers to the name of the filter action. It is not meant to set the  filteraction configuration through the SECRET XML file, but rather through annotations on the filter action itself. In the configuration file it is generally used for the report generation.
                                	</xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleType>
                                	<xsd:restriction base="xsd:string">
                                		<xsd:enumeration value="transition"></xsd:enumeration>
                                		<xsd:enumeration value="node"></xsd:enumeration>
                                		<xsd:enumeration value="filteraction"></xsd:enumeration>
                                	</xsd:restriction>
                                </xsd:simpleType>
							</xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="sequence" maxOccurs="unbounded" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						A sequence of operations applied to the given resource. Each operating is delimited using semi
						colons.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="resource" type="xsd:string" use="required">
								<xsd:annotation>
									<xsd:documentation>
										The name of the resource this sequence applies to.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>

		</xsd:sequence>

		<xsd:attribute name="priority" type="xsd:int">
			<xsd:annotation>
				<xsd:documentation>*** DEPRECATED ***
					A priority for this action. Multiple actions can have an effect on a given label, the priority value
					defines which comes first. The default priority is 0, a lower value means it has a higher priority.
				</xsd:documentation>
			</xsd:annotation></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="SecretConfig">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="resource" type="Resource"></xsd:element>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="action" type="Action"></xsd:element>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="rule" type="Rule"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="ResourceNameType">
        <xsd:annotation>
        	<xsd:documentation>Type used for the resource names.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Za-z][A-Za-z0-9]*(.[A-Za-z][A-Za-z0-9]*)?"></xsd:pattern>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>