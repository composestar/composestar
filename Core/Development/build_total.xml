<?xml version="1.0" encoding="UTF-8"?>
<project name="ComposeStar" default="build">

	<import file="../common.xml" />

	<description>Compose* - General build script</description>

	<!-- clean tasks -->

	<target name="clean" description="Cleanup compilation results">
		<antcall target="clean_core" inheritRefs="true" />
		<antcall target="clean_starlight" inheritRefs="true" />
		<antcall target="clean_java" inheritRefs="true" />
		<antcall target="clean_cwc" inheritRefs="true" />
	</target>

	<target name="clean_core" depends="init" description="Clean the Core of Compose*">
		<ant target="clean" dir="${build.core}" inheritRefs="true" />
	</target>

	<target name="clean_starlight" depends="init" if="enabled.starlight" description="Clean Compose* StarLight">
		<ant target="clean" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="clean_java" depends="init" if="enabled.java" description="Clean the Java port of Compose*">
		<ant target="clean" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="clean_cwc" depends="init" if="enabled.cwc" description="Clean the C (WeaveC) port of Compose*">
		<ant target="clean" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<!-- build tasks -->

	<target name="build" description="Builds all available and enabled parts of the Compose* project">
		<antcall target="build_core" inheritRefs="true" />
		<antcall target="build_starlight" inheritRefs="true" />
		<antcall target="build_java" inheritRefs="true" />
		<antcall target="build_cwc" inheritRefs="true" />
	</target>

	<target name="build_core" depends="init" description="Build the Core of Compose*">
		<ant target="build" dir="${build.core}" inheritRefs="true" />
	</target>

	<target name="build_starlight" depends="build_core" if="enabled.starlight" description="Build Compose* StarLight">
		<ant target="build" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="build_java" depends="build_core" if="enabled.java" description="Build the Java port">
		<ant target="build" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="build_cwc" depends="build_core" if="enabled.cwc" description="Build the C (WeaveC) port">
		<ant target="build" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<!-- install tasks -->

	<target name="install" description="Copy the resulting binaries to the installation directory.">
		<antcall target="install_core" inheritRefs="true" />
		<antcall target="install_starlight" inheritRefs="true" />
		<antcall target="install_java" inheritRefs="true" />
		<antcall target="install_cwc" inheritRefs="true" />
	</target>

	<target name="install_core" depends="init">
		<ant target="install" dir="${build.core}" inheritRefs="true" />
	</target>

	<target name="install_starlight" depends="init" if="enabled.starlight">
		<ant target="deploy" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="install_java" depends="init" if="enabled.java">
		<ant target="install" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="install_cwc" depends="init" if="enabled.cwc">
		<ant target="install" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<!-- publish tasks -->

	<target name="publish">
		<antcall target="publish_java" inheritRefs="true" />
		<antcall target="publish_starlight" inheritRefs="true" />
	</target>

	<target name="publish_java" depends="init" if="enabled.java" description="Create installer for Compose*/Java">
		<ant target="publish" dir="${build.java}/Installer" inheritRefs="true" />
	</target>

	<target name="publish_starlight" depends="init" if="enabled.starlight" description="Create installer for Compose* StarLight">
		<ant target="build_installer" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<!-- uninstall tasks -->

	<target name="uninstall" depends="init" description="Uninstall">
		<!--<ant target="uninstall" dir="${build.core}" />-->
	</target>

	<!-- plugin tasks -->

	<target name="plugin" depends="init" description="Compile the IDE plugins">
		<ant target="plugin" dir="${build.core}" inheritRefs="true" />
		<antcall target="plugin_java" inheritRefs="true" />
	</target>

	<target name="plugin_java" depends="init" if="enabled.java">
		<ant target="plugin" dir="${build.java}" inheritRefs="true" />
	</target>

	<!-- QA tasks -->
	<target name="qa" depends="findbugs,checkstyle,qa_starlight,qa_performance" description="Execute Quality Assurance tasks" />

	<target name="qa_starlight" description="Execute Quality Assurance tasks">
		<antcall target="fxcop_starlight" inheritRefs="true" />
		<antcall target="findbugs_starlight" inheritRefs="true" />
		<antcall target="checkstyle_starlight" inheritRefs="true" />
	</target>

	<!-- execute FXCop tools -->
	<target name="fxcop" depends="init" description="Analyse the .net code using FxCop.">
		<antcall target="fxcop_starlight" inheritRefs="true" />
	</target>

	<target name="fxcop_starlight" depends="init" if="enabled.starlight">
		<ant target="fxcop" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<!-- execute the findbugs tool -->
	<target name="findbugs" depends="init" description="Analyse the compiled Java code for possible bugs.">
		<antcall target="findbugs_core" inheritRefs="true" />
		<antcall target="findbugs_starlight" inheritRefs="true" />
		<antcall target="findbugs_java" inheritRefs="true" />
		<antcall target="findbugs_cwc" inheritRefs="true" />
	</target>

	<target name="findbugs_core" depends="init">
		<ant target="findbugs" dir="${build.core}" inheritRefs="true" />
	</target>

	<target name="findbugs_java" depends="init" if="enabled.java">
		<ant target="findbugs" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="findbugs_starlight" depends="init" if="enabled.starlight">
		<ant target="findbugs" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="findbugs_cwc" depends="init" if="enabled.cwc">
		<ant target="findbugs" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<!-- execute the checkstyle tool -->
	<target name="checkstyle" depends="init" description="Run CheckStyle source code proof reader.">
		<antcall target="checkstyle_core" inheritRefs="true" />
		<antcall target="checkstyle_starlight" inheritRefs="true" />
		<antcall target="checkstyle_java" inheritRefs="true" />
		<antcall target="checkstyle_cwc" inheritRefs="true" />
	</target>

	<target name="checkstyle_core" depends="init">
		<ant target="checkstyle" dir="${build.core}" inheritRefs="true" />
	</target>

	<target name="checkstyle_java" depends="init" if="enabled.java">
		<ant target="checkstyle" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="checkstyle_starlight" depends="init" if="enabled.starlight">
		<ant target="checkstyle" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="checkstyle_cwc" depends="init" if="enabled.cwc">
		<ant target="checkstyle" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<!-- execute the findbugs tool -->
	<target name="qa_performance" depends="init" description="Create example compilation performance reports">
		<antcall target="qa_performance_starlight" inheritRefs="true" />
		<antcall target="qa_performance_java" inheritRefs="true" />
		<antcall target="qa_performance_cwc" inheritRefs="true" />
	</target>

	<target name="qa_performance_java" depends="init" if="enabled.java">
		<ant target="example_performance" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="qa_performance_starlight" depends="init" if="enabled.starlight">
		<ant target="example_performance" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="qa_performance_cwc" depends="init" if="enabled.cwc">
		<ant target="example_performance" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<!-- documentation -->
	<target name="documentation_starlight" description="Create the StarLight documentation." depends="init" if="enabled.starlight">
		<ant target="documentation" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<!-- tests -->
	<target name="test" description="Execute system tests.">
		<antcall target="test_core" inheritRefs="true" />
		<antcall target="test_starlight" inheritRefs="true" />
		<antcall target="test_java" inheritRefs="true" />
		<antcall target="test_cwc" inheritRefs="true" />
	</target>

	<target name="test_core" depends="init" description="Execute JUnit tests.">
		<ant target="test" dir="${build.core}" inheritRefs="true" />
	</target>

	<target name="test_java" depends="init" if="enabled.java">
		<ant target="test" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="test_cwc" depends="init" if="enabled.cwc">
		<ant target="test" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<target name="test_starlight" depends="init" if="enabled.starlight">
		<ant target="test" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<!-- SVN tasks -->
	<target name="svn-update-all" description="Update all trees from the svn" depends="init">
		<svn>
			<status path="${build.root}" textStatusProperty="build.root.svn.status" />
		</svn>
		<condition property="build.root.in.svn">
			<not>
				<equals arg1="${build.root.svn.status}" arg2="non-svn" />
			</not>
		</condition>

		<antcall target="svn-update-root" inheritRefs="true" />
		<antcall target="svn-update-all-seperated" inheritRefs="true" />
	</target>

	<!-- called when root is under svn control -->
	<target name="svn-update-root" if="build.root.in.svn">
		<svn>
			<update dir="${build.root}" />
		</svn>
	</target>

	<!-- called when root is not under svn control -->
	<target name="svn-update-all-seperated" unless="build.root.in.svn">
		<antcall target="svn-update-core" inheritRefs="true" />
		<antcall target="svn-update-starlight" inheritRefs="true" />
		<antcall target="svn-update-java" inheritRefs="true" />
		<antcall target="svn-update-cwc" inheritRefs="true" />
	</target>

	<target name="svn-update-core" depends="init">
		<ant target="svn-update" dir="${build.core}" inheritRefs="true" />
	</target>

	<target name="svn-update-starlight" depends="init" if="enabled.starlight">
		<ant target="svn-update" dir="${build.starlight}" inheritRefs="true" />
	</target>

	<target name="svn-update-java" depends="init" if="enabled.java">
		<ant target="svn-update" dir="${build.java}" inheritRefs="true" />
	</target>

	<target name="svn-update-cwc" depends="init" if="enabled.cwc">
		<ant target="svn-update" dir="${build.cwc}" inheritRefs="true" />
	</target>

	<!-- do everything -->
	<!-- note: "install" should imply "build" -->
	<target name="install_test" depends="install,test" description="Install and test the whole system" />
	<target name="required" depends="clean,install,test" description="Perform the required actions before allowing a commit." />
	<target name="cleaninstall" depends="clean,install" description="Clean, compile, and then install" />
	<target name="all" depends="clean,install,test,qa" description="Recompile, install and test the whole system." />

	<target name="integration">
		<!-- remove the next couple of lines to re-enable full builds -->
		<antcall target="clean" inheritRefs="true" />
		<echo level="error">
			Integration builds disabled.
			Edit the Core/Development/build_total.xml file
		</echo>
		
		<!--
		<antcall target="required" inheritRefs="true" />
		<antcall target="qa" inheritRefs="true" />
		-->
	</target>

	<target name="integration_publish">
		<echo level="error">
			Integration builds disabled.
			Edit the Core/Development/build_total.xml file
		</echo>
		<!--<antcall target="publish" inheritRefs="true" />-->
	</target>

	<!-- fancy selection -->
	<target name="select">
		<taskdef resource="com/sardak/antform/taskdefs.properties" classpath="${basedir}/Ant/lib/antform.jar" />
		<antmenu image="${basedir}/../Resources/logo-64x64.png" title="Compose* Build">

			<antMenuItem name="Advanced">
				<antMenuItem name="Report" target="report" />
				<antMenuItem name="Clean" target="clean" />
				<antMenuItem name="Build">
					<antMenuItem name="Build all" target="build" />
					<antMenuItem name="Rebuild all" target="rebuild" />
					<antMenuItem name="Core" target="build_core" />
					<!-- unfortunately these ifs don't seem to work very well -->
					<antMenuItem name="StarLight" target="build_starlight" if="enabled.starlight" />
					<antMenuItem name="Java" target="build_java" if="enabled.java" />
					<antMenuItem name="C (WeaveC)" target="build_cwc" if="enabled.cwc" />
				</antMenuItem>
				<antMenuItem name="Plugin">
					<antMenuItem name="Java" target="plugin_java" if="enabled.java" />
				</antMenuItem>
				<antMenuItem name="Install">
					<antMenuItem name="Install" target="install" />
					<antMenuItem name="Uninstall" target="uninstall" />
				</antMenuItem>
				<antMenuItem name="Publish">
					<antMenuItem name="All" target="publish" />
					<antMenuItem name="StarLight" target="publish_starlight" if="enabled.starlight" />
				</antMenuItem>
				<antMenuItem name="Run tests" target="test" />
				<antMenuItem name="QA">
					<antMenuItem name="All QA targets" target="qa" />
					<antMenuItem name="FindBugs" target="findbugs" />
					<antMenuItem name="CheckStyle" target="checkstyle" />
				</antMenuItem>
			</antMenuItem>

			<link label="Rebuild" target="rebuild" />
			<link label="Clean install" target="cleaninstall" />
			<link label="Install &amp; test" target="install_test" />
			<link label="Clean, build, install &amp; test" target="required" />
			<separator />
			<link label="Cancel" target="cancel" />

		</antmenu>
	</target>
</project>
