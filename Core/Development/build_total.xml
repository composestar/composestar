<?xml version="1.0" encoding="UTF-8"?>
<project name="ComposeStar" default="build">

	<import file="../common.xml"/>
	
	<description>
	Compose* - General build script
	</description>
	
	<!-- clean tasks -->
	
	<target name="clean" description="Cleanup compilation results">
		<antcall target="clean_core" />
		<antcall target="clean_dotnet" />
		<antcall target="clean_starlight" />
		<antcall target="clean_java" />
		<antcall target="clean_c" />
	</target>
	
	<target name="clean_core" depends="init" description="Clean the Core of Compose*">
		<ant target="clean" dir="${build.core}" />
	</target>

	<target name="clean_dotnet" depends="init" if="enabled.dotnet" description="Clean the .NET port of Compose*">
		<ant target="clean" dir="${build.dotnet}" />
	</target>
	
	<target name="clean_starlight" depends="init" if="enabled.starlight" description="Clean Compose* StarLight">
		<echo message="Running clean on StarLight"/>
		<ant target="clean" dir="${build.starlight}" />
	</target>
	
	<target name="clean_java" depends="init" if="enabled.java" description="Clean the Java port of Compose*">
		<ant target="clean" dir="${build.java}" />
	</target>
	
	<target name="clean_c" depends="init" if="enabled.c" description="Clean the C port of Compose*">
		<ant target="clean" dir="${build.c}" />
	</target>
	
	<!-- build tasks -->	
	
	<target name="build" description="Builds all available and enabled parts of the Compose* project">
		<antcall target="build_core" />
		<antcall target="build_dotnet" />
		<antcall target="build_starlight" />
		<antcall target="build_java" />
		<antcall target="build_c" />
	</target>
	
	<target name="build_core" depends="init" description="Build the Core of Compose*">
		<ant target="build" dir="${build.core}" />
	</target>
	
	<target name="build_dotnet" depends="build_core" if="enabled.dotnet" description="Build the .NET port">
		<ant target="build" dir="${build.dotnet}" />
	</target>
	
	<target name="build_starlight" depends="build_core" if="enabled.starlight" description="Build Compose* StarLight">
		<ant target="build" dir="${build.starlight}" />
	</target>
	
	<target name="build_java" depends="build_core" if="enabled.java" description="Build the Java port">
		<ant target="build" dir="${build.java}" />
	</target>
	
	<target name="build_c" depends="build_core" if="enabled.c" description="Build the C port">
		<ant target="build" dir="${build.c}" />
	</target>

	<!-- install tasks -->
	
	<target name="install" description="Copy the resulting binaries to the installation directory.">
		<antcall target="install_core" />
		<antcall target="install_dotnet" />
		<antcall target="install_starlight" />
		<antcall target="install_java" />	
		<antcall target="install_c" />	
	</target>

	<target name="install_core" depends="init">
		<ant target="install" dir="${build.core}" />		
	</target>
	
	<target name="install_dotnet" depends="init" if="enabled.dotnet">
		<ant target="install" dir="${build.dotnet}" />
	</target>

	<target name="install_starlight" depends="init" if="enabled.starlight">
		<ant target="install" dir="${build.starlight}" />
	</target>

	<target name="install_java" depends="init" if="enabled.java">
		<ant target="install" dir="${build.java}" />
	</target>
	
	<target name="install_c" depends="init" if="enabled.c">
		<ant target="install" dir="${build.c}" />
	</target>

	<!-- publish tasks -->
	
	<target name="publish">
		<antcall target="publish_dotnet"/>
		<antcall target="publish_starlight"/>
	</target>

	<target name="publish_dotnet" depends="init,build_dotnet" if="enabled.dotnet" description="Create installer for Compose* .NET">
		<ant target="publish" dir="${build.dotnet}/Installer"/>
	</target>
	
	<target name="publish_starlight" depends="init,build_starlight" if="enabled.starlight" description="Create installer for Compose* StarLight">
		<ant target="publish" dir="${build.starlight}/Setup"/>
	</target>
	
	<!-- uninstall tasks -->
	
	<target name="uninstall" depends="init" description="Uninstall">
		<!--<ant target="uninstall" dir="${build.core}" />-->
		<antcall target="uninstall_dotnet" />
	</target>
	
	<target name="uninstall_dotnet" if="enabled.dotnet">
		<ant target="uninstall" dir="${build.dotnet}" />
	</target>
	
	<!-- plugin tasks -->
	
	<target name="plugin" depends="init" description="Compile the IDE plugins">
		<antcall target="plugin_dotnet" />
		<antcall target="plugin_java" />	
	</target>
	
	<target name="plugin_dotnet" depends="init" if="enabled.dotnet">
		<ant target="plugin" dir="${build.dotnet}" />
	</target>
	
	<target name="plugin_java" depends="init" if="enabled.java">
		<ant target="plugin" dir="${build.java}" />
	</target>
	
	<!-- QA tasks -->
	<target name="qa" depends="findbugs,checkstyle" description="Execute Quality Assurance tasks" />

	<target name="qa_starlight" description="Execute Quality Assurance tasks">
		<antcall target="fxcop_starlight" />
		<antcall target="findbugs_starlight" />
		<antcall target="checkstyle_starlight" />
	</target>

  <!-- execute FXCop tools -->
  <target name="fxcop" depends="init" description="Analyse the .net code using FxCop.">
		<antcall target="fxcop_starlight" />
	</target>

  <target name="fxcop_starlight" depends="init" if="enabled.starlight">
		<ant target="fxcop" dir="${build.starlight}" />
	</target>

	<!-- execute the findbugs tool -->
	<target name="findbugs" depends="init" description="Analyse the compiled Java code for possible bugs.">
		<antcall target="findbugs_core" />
		<antcall target="findbugs_dotnet" />
		<antcall target="findbugs_starlight" />
	</target>
	
	<target name="findbugs_core" depends="init">
		<ant target="findbugs" dir="${build.core}" />
	</target>
	
	<target name="findbugs_dotnet" depends="init" if="enabled.dotnet">
		<ant target="findbugs" dir="${build.dotnet}" />
	</target>
	
	<target name="findbugs_starlight" depends="init" if="enabled.starlight">
		<ant target="findbugs" dir="${build.starlight}" />
	</target>
	
	<!-- execute the checkstyle tool -->
	<target name="checkstyle" depends="init" description="Run CheckStyle source code proof reader.">
		<antcall target="checkstyle_core" />
		<antcall target="checkstyle_dotnet" />
		<antcall target="checkstyle_starlight" />
	</target>
	
	<target name="checkstyle_core" depends="init">
		<ant target="checkstyle" dir="${build.core}" />
	</target>
	
	<target name="checkstyle_dotnet" depends="init" if="enabled.dotnet">
		<ant target="checkstyle" dir="${build.dotnet}" />
	</target>
	
	<target name="checkstyle_starlight" depends="init" if="enabled.starlight">
		<ant target="checkstyle" dir="${build.starlight}" />
	</target>
	
	<!-- documentation -->
	<target name="documentation_starlight" description="Create the StarLight documentation." depends="init" if="enabled.starlight">
		<ant target="documentation" dir="${build.starlight}" />
	</target>

	<!-- tests -->	
	<target name="test" description="Execute system tests.">
		<antcall target="test_core" />
		<antcall target="test_dotnet" />
		<antcall target="test_java" />
	</target>

	<target name="test_core" depends="init" description="Execute JUnit tests.">
		<ant target="test" dir="${build.core}"/>
	</target>
	
	<target name="test_dotnet" depends="init" if="enabled.dotnet">
		<ant target="test" dir="${build.dotnet}" />
	</target>
	
	<target name="test_java" depends="init" if="enabled.java">
		<ant target="test" dir="${build.java}" />
	</target>
	
	<!-- SVN tasks -->
	<target name="svn-update-all" description="Update all trees from the svn"
		depends="svn-update-core,svn-update-dotnet,svn-update-starlight,svn-update-java,svn-update-c"
	/>
	
	<target name="svn-update-core" depends="init">
		<ant target="svn-update" dir="${build.core}" />
	</target>
	
	<target name="svn-update-dotnet" depends="init" if="enabled.dotnet">
		<ant target="svn-update" dir="${build.dotnet}" />
	</target>
	
	<target name="svn-update-starlight" depends="init" if="enabled.starlight">
		<ant target="svn-update" dir="${build.starlight}" />
	</target>
	
	<target name="svn-update-java" depends="init" if="enabled.java">
		<ant target="svn-update" dir="${build.java}" />
	</target>
	
	<target name="svn-update-c" depends="init" if="enabled.c">
		<ant target="svn-update" dir="${build.c}" />
	</target>
	
	<!-- do everything -->
	<!-- note: "install" should imply "build" -->
	<target name="install_test"   depends="install,test" description="Install and test the whole system"/>
	<target name="required" depends="clean,install,test" description="Perform the required actions before allowing a commit." />	
	<target name="cleaninstall"  depends="clean,install" description="Clean, compile, and then install" />
	<target name="all"   depends="clean,install,test,qa" description="Recompile, install and test the whole system." />	
	
	<target name="integration">
		<antcall target="svn-update-all" />
		<antcall target="required" />
	</target>
	
	<target name="integration_starlight">
	  <property name="build.integration.core" value="c:\starlight\core" />
	  <property name="build.integration.starlight" value="c:\starlight\starlight" />
		<ant target="svn-update" dir="${build.integration.core}" />
		<ant target="svn-update" dir="${build.integration.starlight}" />
		<ant target="build" dir="${build.integration.starlight}\Source\VSIntegration\MSBuildTasks" />
		<ant target="fxcop" dir="${build.integration.starlight}" />
		<ant target="findbugs" dir="${build.integration.starlight}" />
		<ant target="checkstyle" dir="${build.integration.starlight}" />
	</target>
	
	<target name="integration_publish">
		<antcall target="publish" />
		<antcall target="qa" />
	</target>
	
	<target name="nightlybuild" description="Execute the nightly build">
		<tstamp />
		<echo>
========================================================================
                  Compose* Nightly Build - Report

The following in the report of the nightly build of Compose* on:
 ${TODAY}
If the build failed the cause will be listed at the end of the report.
========================================================================
		</echo>
		<antcall target="all" />
	</target>
	
	<!-- fancy selection -->	
	<target name="select" depends="init">	
		<taskdef resource="com/sardak/antform/taskdefs.properties" classpath="${basedir}/Ant/lib/antform.jar"/>
		<antmenu image="${basedir}/logo.gif" title="Compose* Build">
		
			<antMenuItem name="Advanced" >
				<antMenuItem name="Report" target="report"/>
				<antMenuItem name="Clean"  target="clean"/>		
				<antMenuItem name="Build">
					<antMenuItem name="Build all"   target="build"/>
					<antMenuItem name="Rebuild all" target="rebuild"/>
					<antMenuItem name="Core"        target="build_core"/>
					<!-- unfortunately these ifs don't seem to work very well -->
					<antMenuItem name="DotNET"      target="build_dotnet"    if="enabled.dotnet"/>
					<antMenuItem name="StarLight"   target="build_starlight" if="enabled.starlight"/>
					<antMenuItem name="Java"        target="build_java"      if="enabled.java"/>
				<!--
					<antMenuItem name="C"           target="build_c"         if="enabled.c"/>
				-->
				</antMenuItem>
				<antMenuItem name="Plugin">
					<antMenuItem name="DotNET" target="plugin_dotnet" if="enabled.dotnet"/>
					<antMenuItem name="Java"   target="plugin_java"   if="enabled.java"/>
				</antMenuItem>
				<antMenuItem name="Install">
					<antMenuItem name="Install"   target="install"/>
					<antMenuItem name="Uninstall" target="uninstall"/>
				</antMenuItem>
				<antMenuItem name="Publish">
					<antMenuItem name="All"    target="publish"/>
					<antMenuItem name="DotNET" target="publish_dotnet" if="enabled.dotnet"/>
					<antMenuItem name="StarLight" target="publish_starlight" if="enabled.starlight"/>
				</antMenuItem>
				<antMenuItem name="Run tests"   target="test"/>
				<antMenuItem name="QA">
					<antMenuItem name="All QA targets" target="qa"/>
					<antMenuItem name="FindBugs"       target="findbugs"/>
					<antMenuItem name="CheckStyle"     target="checkstyle"/>
				</antMenuItem>
			</antMenuItem>
			
			<link label="Rebuild" target="rebuild"/>
			<link label="Clean install" target="cleaninstall"/>			
			<link label="Install &amp; test" target="install_test"/>			
			<link label="Clean, build, install &amp; test" target="required"/>
			<separator/>
			<link label="Cancel" target="cancel"/>
			
		</antmenu>
	</target>
</project>
