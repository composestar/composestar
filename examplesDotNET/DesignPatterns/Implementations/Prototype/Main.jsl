/**
 * "The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is ca.ubc.cs.spl.aspectPatterns. 
 * 
 * The Initial Developers of the Original Code are Jan Hannemann and Gregor Kiczales.
 * 
 * For more details and the latest version of the original code, please see: 
 * http://www.cs.ubc.ca/labs/spl/projects/aodps.html
 * 
 * Contributor(s): Stephan Huttenhuis.
 * 
 * The modified version of the code is part of the Compose* project which can be found at: 
 * http://composestar.sf.net
 * 
 */
package Composestar.Patterns.Prototype;

public class Main 
{

    public static void main(String[] args) {
        
        try {
    
            System.out.println("Testing the Prototype design pattern implementation...");
            
            StringPrototypeA originalA;
            StringPrototypeB originalB;
            StringPrototypeA copyA1, copyA2;
            StringPrototypeB copyB1;
            
            originalA = new StringPrototypeA("  This is Prototype 1");
            originalB = new StringPrototypeB("  This is Prototype 2"); 
            
            System.out.println("These are the two prototypes:");
			
            System.out.println(originalA.ts());
            System.out.println(originalB.ts());
            
            copyA1 = (StringPrototypeA) originalA.cloneMe();
			copyB1 = (StringPrototypeB) originalB.cloneMe();
    
            System.out.println("These are copies of the prototypes:");
            System.out.println(copyA1.ts());
            System.out.println(copyB1.ts());

            System.out.println("Now prototype 1 is changed. Here are prototype 1 and its former copy:");
			originalA.setText("  This is Prototype 1 (changed)");
            System.out.println(originalA.ts());
            System.out.println(copyA1.ts());
            
            System.out.println("This is a clone of the changed prototype 1 and a changed copy of prototype 2:");
			copyA2 = (StringPrototypeA) originalA.cloneMe();
			copyB1.setText("  This is a changed copy of prototype 2");
            System.out.println(copyA2.ts());
            System.out.println(copyB1.ts());
            System.out.println("... done.");  
		} 
		catch (Exception ex) 
		{
			System.err.println("Exception: "+ex);
		}

    }
}