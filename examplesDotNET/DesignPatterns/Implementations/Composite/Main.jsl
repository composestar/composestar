/**
 * "The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is ca.ubc.cs.spl.aspectPatterns. 
 * 
 * The Initial Developers of the Original Code are Jan Hannemann and Gregor Kiczales.
 * 
 * For more details and the latest version of the original code, please see: 
 * http://www.cs.ubc.ca/labs/spl/projects/aodps.html
 * 
 * Contributor(s): Stephan Huttenhuis.
 * 
 * The modified version of the code is part of the Compose* project which can be found at: 
 * http://composestar.sf.net
 * 
 */
package Composestar.Patterns.Composite;

public class Main { 

	public static void main(String[] args) 
	{
		System.out.println("\n<<< Sample Compose* implementation of Composite pattern >>>\n");
		System.out.print  ("Creating Composite structure ...\n");

		Directory directory1 = new Directory("Directory1");
		Directory directory2 = new Directory("Directory2");
		File 	  file1      = new File("File1", 123);
		File      file2      = new File("File2", 4556);
		File      file3      = new File("File3", 16); 
		
		directory1.addC(file1);
		directory1.addC(directory2);
		directory2.addC(file2);
		directory1.addC(file3); 

		System.out.println("done."); 
		System.out.println("This is the Structure:");
		
		directory1.printStructure();
		System.out.println("\n<<< Test completed >>>\n");
	}
}