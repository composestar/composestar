package Composestar.Patterns.Strategy;

import java.util.List;
import java.util.LinkedList;

import Composestar.RuntimeCore.FLIRT.Reflection.MessageInfo;

public class QuickSort implements SortingStrategy
{
	public QuickSort(){}

	public String show(List numbers) 
	{
		String out = "";
		for (int i=0; i<numbers.size(); i++)
		{
			out += (numbers.get(i) + " ");
		}  
		return out;
	}

	public void sort(List numbers)
	{
		System.out.print("Sorting by QuickSort...");
		//get the original receiver i.e. Sorter
		Sorter server = (Sorter)MessageInfo.getServer();
		List less = new LinkedList();
		List pivotList = new LinkedList();
		List greater = new LinkedList();
		List result = new LinkedList();
		
		if (!(numbers.size() <= 1))
		{
			int pivot = ((Integer)numbers.get(0)).intValue();
			System.out.println("Choosing pivot: "+pivot);
			int current=-1;
			for(int i=1; i < numbers.size(); i++)
			{
				current = ((Integer)numbers.get(i)).intValue();
				if (current < pivot)
				{
					less.add(new Integer(current));
				}
				else
				{

					greater.add(new Integer(current));
				}
			}
			pivotList.add(new Integer(pivot));

			server.sort(less);
			server.sort(greater);
			numbers.clear();
			numbers.addAll(less);
			numbers.addAll(pivotList);
			numbers.addAll(greater);
			System.out.println("done.");
		}
	}
}

