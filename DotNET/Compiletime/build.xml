<?xml version="1.0" encoding="UTF-8"?>
<project name="ComposeStar/DotNET/Compiletime" default="build">

	<condition property="build.core" value="${basedir}${file.separator}..${file.separator}..${file.separator}Core">
		<and>
			<not><isset property="build.core"/></not>
			<available file="${basedir}${file.separator}..${file.separator}..${file.separator}Core${file.separator}common.xml"/>
		</and>
	</condition>
	
	<import file="${build.core}\common.xml"/>
	
	<echo>Processing: ${ant.project.name} ...</echo>
	
	<description>The Compose* DotNET Compiletime</description>

	<target name="clean" depends="init" description="clean the compilation results">
		
		<!-- Java build files -->
		<delete dir="${out.build}"/>
		<delete dir="${out.dist}"/>
		<delete>
			<fileset dir="src">
				<include name="**/*.class"/>
			</fileset>
		</delete>
		
		<!-- C# DummyGen -->
		<delete dir="${basedir}\src\Composestar\DotNET\DUMMER\CSharpDummyGenerator\bin"/>
		<delete dir="${basedir}\src\Composestar\DotNET\DUMMER\CSharpDummyGenerator\obj"/>
		<delete>
			<fileset dir="src\Composestar\DotNET\DUMMER\CSharpDummyGenerator\Parse">
				<include name="CSharpLexer.cs"/>
				<include name="CSharpParser.cs"/>
				<include name="CSharpTokenTypes.*"/>
				<include name="*.smap"/>
			</fileset>
		</delete>
		
		<!-- J# DummyGen -->
		<delete>
			<fileset dir="src/Composestar/DotNET/DUMMER">
				<include name="JSharpLexer.java"/>
				<include name="JSharpRecognizer.java"/>
				<include name="JSharpTokenTypes.*"/>
				<include name="*.smap"/>
			</fileset>
		</delete>
		
		<!-- Weavers -->
		<delete dir="${basedir}\src\Composestar\DotNET\ILICIT\Weaver\bin"/>
		<delete dir="${basedir}\src\Composestar\DotNET\ILICIT\Weaver\IlWeaver\obj"/>
		<delete dir="${basedir}\src\Composestar\DotNET\ILICIT\Weaver\PeWeaver\obj"/>
		<delete dir="${basedir}\src\Composestar\DotNET\ILICIT\Weaver\WeaveLibrary\obj"/>

	</target>
	
	<target name="init_local" depends="init">
		<mkdir dir="${out.build}"/>
		<mkdir dir="${out.dist}"/>
	</target>
	
	<target name="build" depends="init_local,antlr,compile_java,jar,compile_dotnet" description="compile the .NET compiletime"/>
	
	<target name="antlr">
		<!--
		<antlr target="src/Composestar/DotNET/DUMMER/CSharpDummyGenerator/Parse/csharp.g" outputdirectory="src/Composestar/DotNET/DUMMER/CSharpDummyGenerator/Parse">
			<classpath refid="lib.dotnet"/>
		</antlr>
		-->
		<exec executable="${basedir}/src/Composestar/DotNET/DUMMER/CSharpDummyGenerator/Parse/antlr-2.7.2.exe" dir="src/Composestar/DotNET/DUMMER/CSharpDummyGenerator/Parse">
			<arg value="csharp.g"/>
		</exec>
		<antlr target="src/Composestar/DotNET/DUMMER/grammars/jsharp.g" outputdirectory="src/Composestar/DotNET/DUMMER">
			<classpath refid="lib.dotnet"/>
		</antlr>
	</target>
	
	<target name="compile_java">
		<javac srcdir="src" destdir="${out.build}" classpathref="lib.dotnet" source="1.4" target="1.4" debug="${build.debug}" deprecation="${build.debug}">
			<exclude name="**/AssemblyInfo.java"/>
		</javac>
	</target>
			
	<target name="compile_dotnet">
		<csc targettype="exe" debug="false" srcdir="src\Composestar\DotNET\ACTING\" destfile="${out.dist}\AttributeHarvester.exe"/>
		<csc targettype="exe" debug="false" srcdir="src\Composestar\DotNET\TYM\TypeHarvester\" destfile="${out.dist}\TypeHarvester.exe"/>
		<antcall target="compile_dotnet_devenv"/>
		<antcall target="compile_dotnet_msbuild"/>
	</target>
	
	<target name="compile_dotnet_devenv" if="available.devenv">

		<!-- C# DummyGen -->
		<devenv solution="${basedir}\src\Composestar\DotNET\DUMMER\CSharpDummyGenerator\CSharpDummyGenerator.sln" action="build"/>

		<!-- Weavers -->
		<devenv solution="${basedir}\src\Composestar\DotNET\ILICIT\Weaver\Weavers.sln" action="build"/>
		
	</target>

	<target name="compile_dotnet_msbuild" if="available.msbuild">

		<!-- C# DummyGen -->
		<msbuild solution="${basedir}\src\Composestar\DotNET\DUMMER\CSharpDummyGenerator\CSharpDummyGenerator.vs2005.sln"/>

		<!-- Weavers -->
		<msbuild solution="${basedir}\src\Composestar\DotNET\ILICIT\Weaver\Weavers.vs2005.sln"/>
	
	</target>

	<target name="jar">
		<jar destfile="${out.jar.dotnet}" basedir="${out.build}" manifest="src/MANIFEST.MF"/>
	</target>
	
	<target name="install" depends="build" description="Install the .NET compiletime">
		<!-- jar files -->
		<copy todir="${composestar.installdir}/Binaries">
			<fileset dir="${out.dist}"/>
		</copy>
		<!-- C# DummyGen -->
		<copy todir="${composestar.installdir}/Binaries">
			<fileset dir="src\Composestar\DotNET\DUMMER\CSharpDummyGenerator\bin">
				<include name="CSharpDummyGenerator.exe"/>
				<include name="antlr.runtime.dll"/>
			</fileset>
		</copy>
		<!-- ILICIT Weavers -->
		<copy todir="${composestar.installdir}/Binaries">
			<fileset dir="src\Composestar\DotNET\ILICIT\Weaver\bin\Release">
				<include name="IlWeaver.exe"/>
				<include name="PeWeaver.exe"/>
				<include name="WeaveLibrary.dll"/>
			</fileset>
		</copy>
		<!-- INCRE configurations -->
		<copy todir="${composestar.installdir}">
			<fileset dir="src/Composestar/DotNET/INCRE/">
				<include name="*.xml"/>
			</fileset>
		</copy>
	</target>

</project>