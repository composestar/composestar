//Source file: H:\\cvs\\home\\staijen\\Pacman\\src\\pacman\\Pacman.java

//Source file: H:\\cvs\\home\\staijen\\Pacman\\src\\pacman\\pacman\\Pacman.java

//Source file: C:\\Documents and Settings\\StaijenT\\My Documents\\cvs\\home\\staijen\\Pacman\\src\\pacman\\Pacman.java

package pacman;

import java.util.Date;
import java.util.Enumeration;
import java.awt.Graphics;

public class Pacman extends Glyph 
{
   private static long eviltime = 0;
   private static long EVIL_DURATION = 5000;
   private Keyboard keyboard;
   private PacmanView pacmanView;
   
   private static Pacman instance;

   /**
   @param world
   @param keyboard
   @roseuid 404338DF0104
    */
   public Pacman(World world, Keyboard keyboard) 
   {
    	super(world);
    	this.keyboard = keyboard;    
   }

	public void setPacmanView(PacmanView view)
	{
		this.pacmanView = view;
	}

	/**
	 @param pacman
	 @roseuid 4034AE1B00B8
	 */
	public void paint(Graphics g) 
	{
		this.pacmanView.paint(g, this);    
	}
   /**
   @roseuid 40349D83007E
    */
   public void setStartPosition() 
   {
    	this.setX(7);
    	this.setY(11);    
   }
   
   /**
   @roseuid 403DD1AE027D
    */
   public void setEvil() 
   {
	   eviltime = System.currentTimeMillis() + EVIL_DURATION;    
   }
   
   /**
   @return boolean
   @roseuid 403DD1C1011D
    */
   public static boolean isEvil() 
   {
		return System.currentTimeMillis() < eviltime;    
   }
   
   /**
   @roseuid 403E0583016E
    */
   public void reset() 
   {
		super.reset();
		this.eviltime = 0;    
   }
   
   /**
   @roseuid 404346930257
    */
   public void update() 
   {
		int kbDirection = keyboard.getNextMove(this, world);
		if( kbDirection != this.getDirection() )
		{
			if( world.canMove( kbDirection, getX(), getY()) )
				setDirection( kbDirection );
		}    
   }
   
   /**
   @roseuid 4047390B02B8
    */
   public void doTurn() 
   {
    	move();
    	Game game = this.pacmanView.parentview.game;
 
    	if( world.foodOn(getX(), getY()))
    	{
    		world.eatFood(getX(), getY());
    		//game.getScore().increase(5);
    	}
    	if( world.vitaminOn(getX(), getY()))
    	{
    		world.eatVitamin(getX(), getY());
			this.setEvil();
			//game.getScore().increase(10);
		  }
		  if( world.isEmpty() )
		  {
		    game.roundOver();
		  }
   }

	public static void initInstance(World world, Keyboard keyboard) 
	{
		instance = new Pacman(world, keyboard);
	}

	public static Pacman getInstance() 
	{
		if( instance == null ) 
		{
			throw new RuntimeException("Please use Pacman::initInstance before Pacman::getInstance");
		}
		return instance;
	}


}
