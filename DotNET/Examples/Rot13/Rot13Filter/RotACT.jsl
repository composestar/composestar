package Rot13Filter;

import Composestar.RuntimeCore.FLIRT.Message.ReifiedMessage;

/**
 * Abstract Communication Type for rotating a string 13 characters.
 * Works on reified messages.
 */
public class RotACT
{
	int rotate = 0;


	public RotACT(int rotate)
	{
		this.rotate = rotate;
	}

	/**
	 * Rotates the ascii characters a-z and A-Z thirteen characters forward in the alphabet.
	 * 
	 * @param message	Reified message must be a message returning a string.
	 */
	public void Rotate(ReifiedMessage message)
	{
		// Execute original message to get return type.
		message.proceed();
		Object o = message.getReturnValue();
		if (o != null)
		{
			String rotatedLine = "";
			String orgLine = (String) o;
			for( int i = 0; i < orgLine.length(); i++ )
			{
				rotatedLine += rotate(orgLine.charAt(i));
			}
			// Set rotated string as new return value.
			message.setReturnValue(rotatedLine);
		}
		// Continue evaluation of filters.
		message.resume();
	}

	public char rotate(char character)
	{
		if((int) 'a' <= character && (int) 'z' >= character)
		{
			int temp = character - ((int) 'a');
			temp += rotate;
			temp %= 26;
			return (char) (((int)'a') + temp);
		}
		else if((int) 'A' <= character && (int) 'Z' >= character)
		{
			int temp = character - (int) 'A';
			temp += rotate;
			temp %= 26;
			return (char) (((int)'A') + temp);
		}
		return character;
	}
}
